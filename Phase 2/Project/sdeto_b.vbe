-- VHDL data flow description generated from `sdeto_b`
--		date : Mon Apr 22 12:52:34 2019


-- Entity Declaration

ENTITY sdeto_b IS
  PORT (
  daytime : in BIT;	-- daytime
  reset : in BIT;	-- reset
  code : in bit_vector(3 DOWNTO 0) ;	-- code
  vdd : in BIT;	-- vdd
  vss : in BIT;	-- vss
  clk : in BIT;	-- clk
  door : out BIT;	-- door
  alarm : out BIT	-- alarm
  );
END sdeto_b;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF sdeto_b IS
  SIGNAL doorpass_cs : REG_VECTOR(11 DOWNTO 0) REGISTER;	-- doorpass_cs
  SIGNAL aux0 : BIT;		-- aux0
  SIGNAL aux2 : BIT;		-- aux2
  SIGNAL aux10 : BIT;		-- aux10
  SIGNAL aux17 : BIT;		-- aux17
  SIGNAL aux22 : BIT;		-- aux22
  SIGNAL aux28 : BIT;		-- aux28
  SIGNAL aux34 : BIT;		-- aux34
  SIGNAL aux40 : BIT;		-- aux40
  SIGNAL aux41 : BIT;		-- aux41
  SIGNAL aux43 : BIT;		-- aux43
  SIGNAL aux47 : BIT;		-- aux47

BEGIN
  aux47 <= (NOT(code(0)) AND (NOT(code(3)) AND (code(1) AND 
(doorpass_cs(11) AND NOT(reset)))));
  aux43 <= ((NOT(aux10) AND code(3)) AND code(1));
  aux41 <= (daytime AND doorpass_cs(11));
  aux40 <= ((((aux22 AND doorpass_cs(7)) OR ((NOT(aux34) AND
 (doorpass_cs(10) OR doorpass_cs(4))) OR ((NOT(
aux28) AND (doorpass_cs(2) OR doorpass_cs(8))) OR ((((
aux22 AND doorpass_cs(1)) OR (((aux17 OR NOT(code(1)))
 AND doorpass_cs(11)) OR (doorpass_cs(6) OR 
doorpass_cs(9)))) OR doorpass_cs(3)) AND (((((aux10 OR 
doorpass_cs(6)) OR NOT(code(3))) OR NOT(code(1))) OR 
doorpass_cs(11)) OR doorpass_cs(1)))))) OR doorpass_cs(0)) AND (
(((((NOT(daytime) AND doorpass_cs(11)) OR (NOT(
aux2) OR doorpass_cs(9))) OR doorpass_cs(8)) OR 
doorpass_cs(10)) OR doorpass_cs(7)) AND NOT(reset)));
  aux34 <= NOT(((NOT(code(2)) OR code(0)) OR code(3)) OR NOT
(code(1)));
  aux28 <= NOT(aux17 OR code(1));
  aux22 <= ((aux0 OR code(3)) OR code(1));
  aux17 <= (aux10 OR code(3));
  aux10 <= (code(2) OR code(0));
  aux2 <= NOT((aux0 OR NOT(code(3))) OR code(1));
  aux0 <= (NOT(code(2)) OR NOT(code(0)));
  label0 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    doorpass_cs (0) <= GUARDED (NOT(aux22) AND doorpass_cs(1) AND NOT(reset));
  END BLOCK label0;
  label1 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    doorpass_cs (1) <= GUARDED (aux28 AND doorpass_cs(2) AND NOT(reset));
  END BLOCK label1;
  label2 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    doorpass_cs (2) <= GUARDED (aux43 AND doorpass_cs(3) AND NOT(reset));
  END BLOCK label2;
  label3 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    doorpass_cs (3) <= GUARDED (aux34 AND doorpass_cs(4) AND NOT(reset));
  END BLOCK label3;
  label4 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    doorpass_cs (4) <= GUARDED (NOT(code(2)) AND daytime AND aux47);
  END BLOCK label4;
  label5 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    doorpass_cs (5) <= GUARDED aux40;
  END BLOCK label5;
  label6 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    doorpass_cs (6) <= GUARDED (NOT(aux22) AND NOT(reset) AND doorpass_cs(7));
  END BLOCK label6;
  label7 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    doorpass_cs (7) <= GUARDED (aux28 AND doorpass_cs(8) AND NOT(reset));
  END BLOCK label7;
  label8 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    doorpass_cs (8) <= GUARDED (aux43 AND doorpass_cs(9) AND NOT(reset));
  END BLOCK label8;
  label9 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    doorpass_cs (9) <= GUARDED (aux34 AND doorpass_cs(10) AND NOT(reset));
  END BLOCK label9;
  label10 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    doorpass_cs (10) <= GUARDED (NOT(code(2)) AND NOT(daytime) AND aux47);
  END BLOCK label10;
  label11 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    doorpass_cs (11) <= GUARDED ((aux41 OR doorpass_cs(5) OR doorpass_cs(6) OR 
NOT(code(3)) OR code(1) OR doorpass_cs(1) OR 
doorpass_cs(3) OR doorpass_cs(2) OR doorpass_cs(4) OR reset OR 
doorpass_cs(0)) AND (aux2 OR doorpass_cs(5) OR reset));
  END BLOCK label11;

alarm <= aux40;

door <= ((aux41 OR doorpass_cs(6) OR doorpass_cs(1) OR 
doorpass_cs(3) OR doorpass_cs(2) OR doorpass_cs(4) OR 
doorpass_cs(0)) AND aux2 AND NOT(reset));
END;
